#!/bin/bash
set -o errexit
PACKAGE="ruby"
VERSION="1.9.1-p376"
PACKAGER="TDW <troydwill@gmail.com>"
DATE="2009-12-22"
PREFIX="/usr"
TARGET="/"
STOW_DIR="/stow"
SUDO="sudo"

PACKAGE_DIR=${PACKAGE}-${VERSION}

do_configure () {
    ./configure --prefix=${PREFIX} \
	--disable-install-doc \
	2>&1 | tee log.stow.configure
}

do_build () {
    make 2>&1 | tee log.stow.make
}

do_install () {
    ${SUDO} make DESTDIR=${STOW_DIR}/${PACKAGE_DIR} install 2>&1 | tee log.stow.install
}

do_stow () {
    ${SUDO} stow -v --target=${TARGET} --dir=${STOW_DIR} ${PACKAGE_DIR} 2>&1 | tee log.stow.stow
}

do_poststow () {
    echo "run makeinfo"
}

do_package () {
    cd /tmp
    ${SUDO} tar -jcf ${PACKAGE_DIR}.stow.tar.bz2 ${STOW_DIR}${PACKAGE_DIR}
}

do_configure
do_build
do_install
do_stow
do_poststow
# do_package

exit
Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-frame-address  use GCC __builtin_frame_address().
  --disable-largefile     omit support for large files
  --enable-pthread        use pthread library.
  --enable-setreuid       use setreuid()/setregid() according to need even if obsolete.
  --disable-rpath         embed run path into extension libraries.
  --enable-shared         build a shared library for Ruby.
  --disable-install-doc    do not install rdoc indexes during install

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-baseruby=RUBY use RUBY as baseruby; RUBY is the pathname of ruby
  --without-gcc           never use gcc
  --with-setjmp-type      select setjmp type
  --with-valgrind         enable valgrind memcheck support.
  --with-dln-a-out        use dln_a_out if possible
  --with-static-linked-ext link external modules statically
  --with-ruby-version=STR ruby version string for version specific directories [full] (full|minor|STR)
  --with-sitedir=DIR      site libraries in DIR [LIBDIR/ruby/site_ruby]
  --with-vendordir=DIR    vendor libraries in DIR [LIBDIR/ruby/vendor_ruby]
  --with-search-path=DIR specify the additional search path
  --with-rubyhdrdir=DIR   core headers in DIR
                          [INCLUDEDIR/RUBY_BASE_NAME-RUBY_VERSION]
  --with-site-hdrdir=DIR  core headers in DIR INCLUDEDIR
  --with-vendor-hdrdir=DIR core headers in DIR INCLUDEDIR
  --with-mantype=TYPE specify man page type; TYPE is one of man and doc

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
