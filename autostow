#!/usr/bin/env perl
use strict;
use warnings;
use ConfigReader::Simple;
use Getopt::Long;
use Pod::Usage;

my $man     = 0;
my $help    = 0;
my $verbose = 0;

my $build_template       = 'gnu';
my $software_package = 'emacs';
my $version          = '23.1.1';
my $result           = GetOptions(
    "template=s" => \$build_template,
    "package=s"    => \$software_package,
    "version=s"    => \$version,
    "verbose"      => \$verbose,
    'help|?'       => \$help
    );

print "==>$build_template\n";

# GetOptions('help|?' => \$help, man => \$man) or pod2usage(2);
pod2usage(1) if $help;
pod2usage( -exitstatus => 0, -verbose => 2 ) if $man;

my $config_file = $ENV{'HOME'} . '/.stowball.cfg';
my $config      = ConfigReader::Simple->new($config_file);

die "DEBUG Could not read config! $ConfigReader::Simple::ERROR\n"
  unless ref $config;

my $template = &read_template( $build_template );
open( STOWFILE, ">stow-$software_package-$version" ) || die;
print STOWFILE $template;
close STOWFILE;

print `find . -cmin -1`;

sub read_template {
    my $template_file = shift;
    $template_file = $ENV{'HOME'} . "/.autostow/templates/$template_file";
    print "==>$template_file<==\n";
    open( TEMPLATE, "<$template_file" ) || die;
    undef $/;    # 'slurp' mode
    my $whole_file = <TEMPLATE>;
    $whole_file =~ s/VERSION=DO_NOT_EDIT/VERSION=\"$version"/;
    $whole_file =~ s/PACKAGE=DO_NOT_EDIT/PACKAGE=\"$software_package"/;
    return $whole_file;
}

__END__

=head1 NAME

autostow - Using Getopt::Long and Pod::Usage

=head1 SYNOPSIS

autostow [options] --package=package

  Options:
              -version         22.3
              -template        gnu.tmpl, cmake.tmpl
              -help            brief help message
              -man             full documentation

=head1 OPTIONS

=over 8

=item B<-help>

Print a brief help message and exits.

=item B<-man>

Prints the manual page and exits.

=back

=head1 DESCRIPTION

B<This program> will read the given input file(s) and do something
useful with the contents thereof.

=cut
